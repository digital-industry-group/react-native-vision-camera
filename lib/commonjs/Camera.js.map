{"version":3,"names":["CameraModule","NativeModules","CameraView","console","error","Camera","React","PureComponent","constructor","props","displayName","onViewReady","bind","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","findNodeHandle","current","CameraRuntimeError","takePhoto","options","e","tryParseNativeCameraError","takeSnapshot","Platform","OS","CameraCaptureError","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","isErrorWithCause","code","message","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","isNativeViewMounted","componentDidUpdate","render","device","frameProcessorFps","id","NativeCameraView","requireNativeComponent"],"sources":["Camera.tsx"],"sourcesContent":["import React from 'react';\nimport { requireNativeComponent, NativeModules, NativeSyntheticEvent, findNodeHandle, NativeMethods, Platform } from 'react-native';\nimport type { FrameProcessorPerformanceSuggestion, VideoFileType } from '.';\nimport type { CameraDevice } from './CameraDevice';\nimport type { ErrorWithCause } from './CameraError';\nimport { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';\nimport type { CameraProps } from './CameraProps';\nimport type { Frame } from './Frame';\nimport type { PhotoFile, TakePhotoOptions } from './PhotoFile';\nimport type { Point } from './Point';\nimport type { TakeSnapshotOptions } from './Snapshot';\nimport type { CameraVideoCodec, RecordVideoOptions, VideoFile } from './VideoFile';\n\n//#region Types\nexport type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';\nexport type CameraPermissionRequestResult = 'authorized' | 'denied';\n\ninterface OnErrorEvent {\n  code: string;\n  message: string;\n  cause?: ErrorWithCause;\n}\ntype NativeCameraViewProps = Omit<\n  CameraProps,\n  'device' | 'onInitialized' | 'onError' | 'onFrameProcessorPerformanceSuggestionAvailable' | 'frameProcessor' | 'frameProcessorFps'\n> & {\n  cameraId: string;\n  frameProcessorFps?: number; // native cannot use number | string, so we use '-1' for 'auto'\n  enableFrameProcessor: boolean;\n  onInitialized?: (event: NativeSyntheticEvent<void>) => void;\n  onError?: (event: NativeSyntheticEvent<OnErrorEvent>) => void;\n  onFrameProcessorPerformanceSuggestionAvailable?: (event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>) => void;\n  onViewReady: () => void;\n};\ntype RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>;\n//#endregion\n\n// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst CameraModule = NativeModules.CameraView;\nif (CameraModule == null) console.error(\"Camera: Native Module 'CameraView' was null! Did you run pod install?\");\n\n//#region Camera Component\n/**\n * ### A powerful `<Camera>` component.\n *\n * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.\n *\n * The `<Camera>` component's most important (and therefore _required_) properties are:\n *\n * * {@linkcode CameraProps.device | device}: Specifies the {@linkcode CameraDevice} to use. Get a {@linkcode CameraDevice} by using the {@linkcode useCameraDevices | useCameraDevices()} hook, or manually by using the {@linkcode Camera.getAvailableCameraDevices Camera.getAvailableCameraDevices()} function.\n * * {@linkcode CameraProps.isActive | isActive}: A boolean value that specifies whether the Camera should actively stream video frames or not. This can be compared to a Video component, where `isActive` specifies whether the video is paused or not. If you fully unmount the `<Camera>` component instead of using `isActive={false}`, the Camera will take a bit longer to start again.\n *\n * @example\n * ```tsx\n * function App() {\n *   const devices = useCameraDevices('wide-angle-camera')\n *   const device = devices.back\n *\n *   if (device == null) return <LoadingView />\n *   return (\n *     <Camera\n *       style={StyleSheet.absoluteFill}\n *       device={device}\n *       isActive={true}\n *     />\n *   )\n * }\n * ```\n *\n * @component\n */\nexport class Camera extends React.PureComponent<CameraProps> {\n  /** @internal */\n  static displayName = 'Camera';\n  /** @internal */\n  displayName = Camera.displayName;\n  private lastFrameProcessor: ((frame: Frame) => void) | undefined;\n  private isNativeViewMounted = false;\n\n  private readonly ref: React.RefObject<RefType>;\n\n  /** @internal */\n  constructor(props: CameraProps) {\n    super(props);\n    this.onViewReady = this.onViewReady.bind(this);\n    this.onInitialized = this.onInitialized.bind(this);\n    this.onError = this.onError.bind(this);\n    this.onFrameProcessorPerformanceSuggestionAvailable = this.onFrameProcessorPerformanceSuggestionAvailable.bind(this);\n    this.ref = React.createRef<RefType>();\n    this.lastFrameProcessor = undefined;\n  }\n\n  private get handle(): number | null {\n    const nodeHandle = findNodeHandle(this.ref.current);\n    if (nodeHandle == null || nodeHandle === -1) {\n      throw new CameraRuntimeError(\n        'system/view-not-found',\n        \"Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?\",\n      );\n    }\n\n    return nodeHandle;\n  }\n\n  //#region View-specific functions (UIViewManager)\n  /**\n   * Take a single photo and write it's content to a temporary file.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const photo = await camera.current.takePhoto({\n   *   qualityPrioritization: 'quality',\n   *   flash: 'on',\n   *   enableAutoRedEyeReduction: true\n   * })\n   * ```\n   */\n  public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {\n    try {\n      return await CameraModule.takePhoto(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Take a snapshot of the current preview view.\n   *\n   * This can be used as an alternative to {@linkcode Camera.takePhoto | takePhoto()} if speed is more important than quality\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while taking a snapshot. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @platform Android\n   * @example\n   * ```ts\n   * const photo = await camera.current.takeSnapshot({\n   *   quality: 85,\n   *   skipMetadata: true\n   * })\n   * ```\n   */\n  public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {\n    if (Platform.OS !== 'android')\n      throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);\n\n    try {\n      return await CameraModule.takeSnapshot(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Start a new video recording.\n   *\n   * Records in the following formats:\n   * * **iOS**: QuickTime (`.mov`)\n   * * **Android**: MPEG4 (`.mp4`)\n   *\n   * @blocking This function is synchronized/blocking.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * camera.current.startRecording({\n   *   onRecordingFinished: (video) => console.log(video),\n   *   onRecordingError: (error) => console.error(error),\n   * })\n   * setTimeout(() => {\n   *   camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public startRecording(options: RecordVideoOptions): void {\n    const { onRecordingError, onRecordingFinished, ...passThroughOptions } = options;\n    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')\n      throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');\n\n    const onRecordCallback = (video?: VideoFile, error?: CameraCaptureError): void => {\n      if (error != null) return onRecordingError(error);\n      if (video != null) return onRecordingFinished(video);\n    };\n    // TODO: Use TurboModules to either make this a sync invokation, or make it async.\n    try {\n      CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Pauses the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async pauseRecording(): Promise<void> {\n    try {\n      return await CameraModule.pauseRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Resumes a currently paused video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async resumeRecording(): Promise<void> {\n    try {\n      return await CameraModule.resumeRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Stop the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * await camera.current.startRecording()\n   * setTimeout(async () => {\n   *  const video = await camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public async stopRecording(): Promise<void> {\n    try {\n      return await CameraModule.stopRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Focus the camera to a specific point in the coordinate system.\n   * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,\n   * and expressed in Pixel on iOS and Points on Android.\n   *  * `(0, 0)` means **top left**.\n   *  * `(CameraView.width, CameraView.height)` means **bottom right**.\n   *\n   * Make sure the value doesn't exceed the CameraView's dimensions.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * await camera.current.focus({\n   *   x: tapEvent.x,\n   *   y: tapEvent.y\n   * })\n   * ```\n   */\n  public async focus(point: Point): Promise<void> {\n    try {\n      return await CameraModule.focus(this.handle, point);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  /**\n   * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).\n   * @example\n   * ```ts\n   * const codecs = await camera.current.getAvailableVideoCodecs(\"mp4\")\n   * ```\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error\n   * @platform iOS\n   */\n  public async getAvailableVideoCodecs(fileType?: VideoFileType): Promise<CameraVideoCodec[]> {\n    if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.\n\n    try {\n      return await CameraModule.getAvailableVideoCodecs(this.handle, fileType);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  //#region Static Functions (NativeModule)\n  /**\n   * Get a list of all available camera devices on the current phone.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting all available camera devices. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const devices = await Camera.getAvailableCameraDevices()\n   * const filtered = devices.filter((d) => matchesMyExpectations(d))\n   * const sorted = devices.sort(sortDevicesByAmountOfCameras)\n   * return {\n   *   back: sorted.find((d) => d.position === \"back\"),\n   *   front: sorted.find((d) => d.position === \"front\")\n   * }\n   * ```\n   */\n  public static async getAvailableCameraDevices(): Promise<CameraDevice[]> {\n    try {\n      return await CameraModule.getAvailableCameraDevices();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the camera.\n   *\n   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getCameraPermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getCameraPermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Microphone-Recording Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the microphone.\n   *\n   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getMicrophonePermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getMicrophonePermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new camera permission status.\n   *\n   * If the user has previously blocked the app from using the camera, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestCameraPermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new microphone permission status.\n   *\n   * If the user has previously blocked the app from using the microphone, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestMicrophonePermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  //#region Events (Wrapped to maintain reference equality)\n  private onError(event: NativeSyntheticEvent<OnErrorEvent>): void {\n    if (this.props.onError != null) {\n      const error = event.nativeEvent;\n      const cause = isErrorWithCause(error.cause) ? error.cause : undefined;\n      this.props.onError(\n        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work\n        new CameraRuntimeError(error.code, error.message, cause),\n      );\n    }\n  }\n\n  private onInitialized(): void {\n    this.props.onInitialized?.();\n  }\n\n  private onFrameProcessorPerformanceSuggestionAvailable(event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>): void {\n    if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null)\n      this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);\n  }\n  //#endregion\n\n  //#region Lifecycle\n  /** @internal */\n  private assertFrameProcessorsEnabled(): void {\n    // @ts-expect-error JSI functions aren't typed\n    if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {\n      throw new CameraRuntimeError(\n        'frame-processor/unavailable',\n        'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting',\n      );\n    }\n  }\n\n  private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.setFrameProcessor(this.handle, frameProcessor);\n  }\n\n  private unsetFrameProcessor(): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.unsetFrameProcessor(this.handle);\n  }\n\n  private onViewReady(): void {\n    this.isNativeViewMounted = true;\n    if (this.props.frameProcessor != null) {\n      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.\n      this.setFrameProcessor(this.props.frameProcessor);\n      this.lastFrameProcessor = this.props.frameProcessor;\n    }\n  }\n\n  /** @internal */\n  componentDidUpdate(): void {\n    if (!this.isNativeViewMounted) return;\n    const frameProcessor = this.props.frameProcessor;\n    if (frameProcessor !== this.lastFrameProcessor) {\n      // frameProcessor argument identity changed. Update native to reflect the change.\n      if (frameProcessor != null) this.setFrameProcessor(frameProcessor);\n      else this.unsetFrameProcessor();\n\n      this.lastFrameProcessor = frameProcessor;\n    }\n  }\n  //#endregion\n\n  /** @internal */\n  public render(): React.ReactNode {\n    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.\n    const { device, frameProcessor, frameProcessorFps, ...props } = this.props;\n    return (\n      <NativeCameraView\n        {...props}\n        frameProcessorFps={frameProcessorFps === 'auto' ? -1 : frameProcessorFps}\n        cameraId={device.id}\n        ref={this.ref}\n        onViewReady={this.onViewReady}\n        onInitialized={this.onInitialized}\n        onError={this.onError}\n        onFrameProcessorPerformanceSuggestionAvailable={this.onFrameProcessorPerformanceSuggestionAvailable}\n        enableFrameProcessor={frameProcessor != null}\n      />\n    );\n  }\n}\n//#endregion\n\n// requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'\nconst NativeCameraView = requireNativeComponent<NativeCameraViewProps>(\n  'CameraView',\n  // @ts-expect-error because the type declarations are kinda wrong, no?\n  Camera,\n);\n"],"mappings":"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"}